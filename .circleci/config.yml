# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: ./gradlew dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # dependencies for the lock script
      - run: sudo apt-get update && sudo apt-get install jq

      # run tests while waiting for other builds
      - run: ./scripts/lock.sh ./gradlew test

      # generate test coverage report
      - run: ./gradlew jacocoTestReport

      # upload report to codecov.io
      - run: bash <(curl -s https://codecov.io/bash) -f build/reports/jacoco/test/jacocoTestReport.xml

      # store test result
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit


  publish:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo

    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: ./gradlew dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      - run:
          name: Decode the signing key (Circle cannot handle multiple lines)
          command: |
            echo 'export ORG_GRADLE_PROJECT_signingKey=$(echo $ORG_GRADLE_PROJECT_signingKey_base64 | base64 --decode)' >> $BASH_ENV
            source $BASH_ENV

      - run: ./gradlew publish closeAndReleaseRepository
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - publish:
          requires:
            - build
          filters:
            branches:
              only: master
