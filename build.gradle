// gradle plugin for junit 5
buildscript {
    repositories {
        mavenCentral()
        // The following is only necessary if you want to use SNAPSHOT releases.
        // maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.3'
    }
}
plugins {
    // uploading to jcenter.bintray.com
    // see https://github.com/bintray/gradle-bintray-plugin
    id "com.jfrog.bintray" version "1.8.0"
    id "java"
    id 'java-library'
    id 'maven-publish'
    // can be run to check for new versions of dependencies
    id 'com.github.ben-manes.versions' version '0.17.0'
}
// plugin for junit 5
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'eclipse'

group 'ch.aaap'
version '0.2.2'

sourceCompatibility = 1.8

junitPlatform {
    details 'tree'
    // this is the default directory. Also set in circleCI
    reportsDir file('build/test-results/junit-platform')
}

// Unfortunately necessary to set a system property for the junitPlatform task
afterEvaluate {
    def junitPlatformTestTask = tasks.getByName('junitPlatformTest')
    if (System.getenv("HARVEST_AUTH_TOKEN") != null) {
        junitPlatformTestTask.systemProperty "harvest.auth.token", System.getenv("HARVEST_AUTH_TOKEN")
    }
    if (System.getenv("HARVEST_ACCOUNT_ID")) {
        junitPlatformTestTask.systemProperty "harvest.auth.accountId", System.getenv("HARVEST_ACCOUNT_ID")
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.5'
}

repositories {
    mavenCentral()
}

// Create the pom configuration:
def pomConfig = {
    licenses {
        license {
            name "MIT License"
            url "https://opensource.org/licenses/MIT"
        }
    }
    developers {
        developer {
            id "mnembrini"
            name "Marco Nembrini"
            email "marco.nembrini.co@gmail.com"
        }
    }

    scm {
        url "https://github.com/3AP-AG/harvest-client"
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    classifier "sources"
}

task javadocJar(type: Jar) {
    from javadoc.outputs
    classifier "javadoc"
}

javadoc {
    // github is set to publish this folder
    destinationDir file("docs")
}

// Create the publication with the pom configuration:
publishing {
    publications {
        all(MavenPublication) {
            from components.java
            artifact sourceJar
            artifact javadocJar
            // version, groupId and artifact Id taken from the project
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'A Java client for the Harvest API')
                root.appendNode('name', 'harvest-client')
                root.appendNode('url', 'https://github.com/3AP-AG/harvest-client')
                root.children().last() + pomConfig
            }
        }
    }
}

dependencies {
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.9.1'
    compile 'com.fatboyindustrial.gson-javatime-serialisers:gson-javatime-serialisers:1.1.1'
    // logging
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.10.0'
    // use log4j for unittests
    runtime group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.10.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.10.0'

    // configuration
    compile 'com.typesafe:config:1.3.2'

    testCompile("org.junit.jupiter:junit-jupiter-api:5.0.3")
    testCompile("org.junit.jupiter:junit-jupiter-params:5.0.3")

    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.0.3")

    testCompile "org.mockito:mockito-core:2.13.0"
    testCompile 'org.assertj:assertj-core:3.9.0'
    compile 'org.assertj:assertj-joda-time:2.0.0'


}

bintray {

    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')

    // what to publish
    publications = ['all']

    pkg {
        repo = '3ap'
        name = 'harvest-client'
        // TODO register 3ap on bintray
        //userOrg = '3ap'
        publish true
        licenses = ['MIT']
        vcsUrl = 'https://github.com/3AP-AG/harvest-client.git'
        version {
            name = project.version
            desc = 'Harvest Client ' + project.version
            released = new Date()
            vcsTag = 'v' + project.version

            // maven central requires gpg signing. Use the bintray key
            gpg {
                sign = true
            }
            mavenCentralSync {
                sync = true
                // username and password on https://issues.sonatype.org/secure/Dashboard.jspa
                user = System.getenv('MAVENCENTRAL_USER')
                password = System.getenv('MAVENCENTRAL_KEY')
                //Optional property.
                // By default the staging repository is closed and artifacts are released to Maven Central.
                // You can optionally turn this behaviour off (by puting 0 as value) and release the version manually.
                close = '1'
            }
        }

    }

}
